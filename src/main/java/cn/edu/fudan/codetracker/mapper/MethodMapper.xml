<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.codetracker.mapper.MethodMapper">

    <insert id="insertMethodInfoList">
        insert into meta_method
        (
        uuid,
        fullname,
        signature,
        class_name,
        file_path,
        package_name,
        meta_class_uuid,
        start_commit,
        start_commit_date,
        end_commit,
        end_commit_date,
        repo_uuid,
        branch,
        content,
        version,
        ccn
        )
        VALUES
        <foreach collection="methodNodes" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.fullName},
            #{item.signature},
            #{item.parent.className},
            #{item.filePath},
            #{item.packageName},
            #{item.parent.rootUuid},
            #{commonInfo.commit},
            #{commonInfo.commitDate},
            #{commonInfo.commit},
            #{commonInfo.commitDate},
            #{commonInfo.repoUuid},
            #{commonInfo.branch},
            #{item.content},
            #{item.version},
            #{item.ccn}
            )
        </foreach>
    </insert>

    <insert id="insertRawMethodInfoList">
        insert into raw_method
        (
        uuid,
        fullname,
        signature,
        meta_method_uuid,
        meta_class_uuid,
        version,
        commitid,
        committer,
        commit_date,
        commit_message,
        last_change_commit,
        change_relation,
        content,
        method_begin,
        method_end,
        diff,
        branch,
        repo_uuid,
        ccn
        )
        VALUES
        <foreach collection="methodNodes" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.fullName},
            #{item.signature},
            #{item.rootUuid},
            #{item.parent.rootUuid},
            #{item.version},
            #{commonInfo.commit},
            #{commonInfo.committer},
            #{commonInfo.commitDate},
            #{commonInfo.commitMessage},
            #{item.lastChangeCommit},
            #{item.changeStatus},
            #{item.content},
            #{item.begin},
            #{item.end},
            #{item.diff,jdbcType=OTHER,typeHandler=cn.edu.fudan.codetracker.handler.JsonTypeHandler},
            #{commonInfo.branch},
            #{commonInfo.repoUuid},
            #{item.ccn}
            )
        </foreach>
    </insert>

    <update id="updateChangeInfo">
        update meta_method
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="fullname = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.fullName}
                </foreach>
            </trim>
            <trim prefix="signature = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.signature}
                </foreach>
            </trim>
            <trim prefix="end_commit = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{commonInfo.commit}
                </foreach>
            </trim>
            <trim prefix="end_commit_date = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{commonInfo.commitDate}
                </foreach>
            </trim>
            <trim prefix="content = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.content}
                </foreach>
            </trim>
            <trim prefix="version = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.version}
                </foreach>
            </trim>
            <trim prefix="file_path = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.filePath}
                </foreach>
            </trim>
            <trim prefix="class_name = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.parent.className}
                </foreach>
            </trim>
            <trim prefix="ccn = case" suffix="end,">
                <foreach collection="methodNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.ccn}
                </foreach>
            </trim>
        </trim>
        where uuid in
        <foreach collection="methodNodes" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.rootUuid}
        </foreach>
    </update>



    <resultMap id="trackerInfo" type="cn.edu.fudan.codetracker.domain.projectinfo.TrackerInfo">
        <id property="version" column="version"/>
        <id property="rootUUID" column="meta_method_uuid"/>
        <id property="lastChangeParent" column="commitid"/>
        <id property="content" column="content"/>
    </resultMap>

    <!--    select version,uuid from meta_method where file_path = #{filePath} and class_name = #{className} and signature = #{signature} order by version desc limit 1-->
    <select id="getTrackerInfo" resultMap="trackerInfo" parameterType="String">
        select meta_method_uuid, version, commitid, content from raw_method where signature = #{signature} and meta_method_uuid in
        (select uuid from meta_method where file_path = #{filePath} and class_name = #{className} and repo_uuid = #{repoUuid} and branch = #{branch})
        and change_relation != "DELETE" order by commit_date desc;
    </select>

</mapper>