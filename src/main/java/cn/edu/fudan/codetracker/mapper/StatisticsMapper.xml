<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.codetracker.mapper.StatisticsMapper">

    <!--valid line 相关-->
    <resultMap id="ValidLineInfoClass" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_class_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByClass" parameterType="String" resultMap="ValidLineInfoClass">
        select uuid,committer,meta_class_uuid,change_relation,commit_date from raw_class where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and repo_uuid = #{repoUuid} and branch = #{branch} and change_relation in ("ADD","DELETE","SELF_CHANGE","MOVE") order by meta_class_uuid,commit_date desc;
    </select>

    <resultMap id="ValidLineInfoMethod" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_method_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByMethod" parameterType="String" resultMap="ValidLineInfoMethod">
        select uuid,committer,meta_method_uuid,change_relation,commit_date from raw_method where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and repo_uuid = #{repoUuid} and branch = #{branch} and change_relation in ("ADD","DELETE","SELF_CHANGE","MOVE") order by meta_method_uuid,commit_date desc;
    </select>

    <resultMap id="ValidLineInfoField" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_field_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByField" parameterType="String" resultMap="ValidLineInfoField">
        select uuid,committer,meta_field_uuid,change_relation,commit_date from raw_field where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and repo_uuid = #{repoUuid} and branch = #{branch} and change_relation in ("ADD","DELETE","SELF_CHANGE","MOVE") order by meta_field_uuid,commit_date desc;
    </select>

    <resultMap id="ValidLineInfoStatement" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_statement_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByStatement" parameterType="String" resultMap="ValidLineInfoStatement">
        select uuid,committer,meta_statement_uuid,change_relation,commit_date from raw_statement where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and repo_uuid = #{repoUuid} and branch = #{branch} and change_relation in ("ADD","DELETE","SELF_CHANGE","MOVE") and isLogic = 1 order by meta_statement_uuid,commit_date desc;
    </select>

    <!--获取时间段内代码存活情况-->
    <resultMap id="SurviveStatement" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_statement_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveStatement" parameterType="String" resultMap="SurviveStatement">
        select meta_statement_uuid, committer, commit_date, change_relation from raw_statement where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and change_relation in ("ADD","SELF_CHANGE","DELETE","MOVE") and repo_uuid = #{repoUuid} and branch = #{branch} and isLogic = 1 order by meta_statement_uuid, commit_date;
    </select>

    <resultMap id="SurviveMethod" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_method_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveMethod" parameterType="String" resultMap="SurviveMethod">
        select meta_method_uuid, committer, commit_date, change_relation from raw_method where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and change_relation in ("ADD","SELF_CHANGE","DELETE","MOVE") and repo_uuid = #{repoUuid} and branch = #{branch} order by meta_method_uuid, commit_date;
    </select>

    <resultMap id="SurviveField" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_field_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveField" parameterType="String" resultMap="SurviveField">
        select meta_field_uuid, committer, commit_date, change_relation from raw_field where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} and branch = #{branch} order by commit_date limit 1) and change_relation in ("ADD","SELF_CHANGE","DELETE","MOVE") and repo_uuid = #{repoUuid} and branch = #{branch} order by meta_field_uuid, commit_date;
    </select>


    <!--删除操作-->
    <delete id="deleteFromMetaPackage" parameterType="String">
        delete from meta_package where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaFile" parameterType="String">
        delete from meta_file where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaClass" parameterType="String">
        delete from meta_class where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaMethod" parameterType="String">
        delete from meta_method where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaField" parameterType="String">
        delete from meta_field where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaStatement" parameterType="String">
        delete from meta_statement where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawPackage" parameterType="String">
        delete from raw_package where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawFile" parameterType="String">
        delete from raw_file where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawClass" parameterType="String">
        delete from raw_class where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawMethod" parameterType="String">
        delete from raw_method where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawField" parameterType="String">
        delete from raw_field where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawStatement" parameterType="String">
        delete from raw_statement where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRelationStatement" parameterType="String">
        delete from relation_statement where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromTrackerRepo" parameterType="String">
        delete from tracker_repo where repo_id=#{repoUuid} and branch=#{branch};
    </delete>





    <!--    暂时未用到-->
    <!-- -->
    <resultMap id="versionStatistics" type="cn.edu.fudan.codetracker.domain.resultmap.VersionStatistics">
        <id property="version" column="version"/>
        <result property="quantity" column="quantity"/>
    </resultMap>

    <select id="getMethodStatistics" parameterType="String" resultMap="versionStatistics" >
        select version ,count(*) as quantity from meta_method  where meta_method.repo_uuid = #{repoUuid} and meta_method.branch = #{branch} group by version order by version desc;
    </select>

    <select id="getClassStatistics" parameterType="String" resultMap="versionStatistics" >
        select version ,count(*) as quantity from meta_class  where meta_class.repo_uuid = #{repoUuid} and meta_class.branch = #{branch} group by version order by version desc;
    </select>

    <select id="getFileStatistics" parameterType="String" resultMap="versionStatistics" >
        select version ,count(*) as quantity from meta_file  where meta_file.repo_uuid = #{repoUuid} and meta_file.branch = #{branch} group by version order by version desc;
    </select>

    <select id="getPackageStatistics" parameterType="String" resultMap="versionStatistics" >
        select version ,count(*) as quantity from meta_package  where meta_package.repo_uuid = #{repoUuid} and meta_package.branch = #{branch} group by version order by version desc;
    </select>

    <!-- -->
    <resultMap id="modifiedFile" type="cn.edu.fudan.codetracker.domain.resultmap.MostModifiedInfo">
        <id property="uuid" column="uuid"/>
        <result property="fileName" column="file_name"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="filePath" column="file_path"/>
        <result property="version" column="version"/>
    </resultMap>

    <resultMap id="modifiedClass" type="cn.edu.fudan.codetracker.domain.resultmap.MostModifiedInfo">
        <id property="uuid" column="uuid"/>
        <result property="className" column="class_name"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="fileName" column="file_name"/>
        <result property="filePath" column="file_path"/>
        <result property="version" column="version"/>
    </resultMap>

    <resultMap id="modifiedMethod" type="cn.edu.fudan.codetracker.domain.resultmap.MostModifiedInfo">
        <id property="uuid" column="uuid"/>
        <result property="methodName" column="fullname"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="fileName" column="file_name"/>
        <result property="filePath" column="file_path"/>
        <result property="className" column="class_name"/>
        <result property="version" column="version"/>
    </resultMap>

    <resultMap id="modifiedPackage" type="cn.edu.fudan.codetracker.domain.resultmap.MostModifiedInfo">
        <id property="uuid" column="uuid"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="version" column="version"/>
    </resultMap>

    <select id="getMostModifiedFile" parameterType="String" resultMap="modifiedFile">
        select uuid,file_name,file_path,package_name,module_name,version from meta_file  where version >1  and meta_file.repo_uuid = #{repoUuid} and meta_file.branch = #{branch} order by version desc limit 20;
    </select>

    <select id="getMostModifiedClass" parameterType="String" resultMap="modifiedClass">
        select uuid,class_name,file_name,file_path,package_name,module_name,version from meta_class  where version >1 and meta_class.repo_uuid = #{repoUuid} and meta_class.branch = #{branch} order by version desc limit 20;
    </select>

    <select id="getMostModifiedMethod" parameterType="String" resultMap="modifiedMethod">
        select uuid,fullname,file_name,file_path,class_name,package_name,module_name,version from meta_method  where version >1 and meta_method.repo_uuid = #{repoUuid} and meta_method.branch = #{branch} order by version desc limit 20;
    </select>

    <select id="getMostModifiedPackage" parameterType="String" resultMap="modifiedPackage">
        select uuid,package_name,module_name,version from meta_package  where version >1 and meta_package.repo_uuid = #{repoUuid} and meta_package.branch = #{branch} order by version desc limit 20;
    </select>


    <!-- -->
    <resultMap id="mostDevelopersInfo" type="cn.edu.fudan.codetracker.domain.resultmap.MostDevelopersInfo">
        <id property="uuid" column="uuid"/>
        <result property="name" column="name"/>
        <result property="filePath" column="file_path"/>
        <result property="quantity" column="quantity"/>
    </resultMap>

    <select id="getMostDevelopersInvolvedMethod" parameterType="String" resultMap="mostDevelopersInfo">
        select r.method_uuid as uuid,r.fullname as name,m.file_path,count(distinct(r.committer)) as quantity from raw_method as r,meta_method as m  where r.method_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} group by r.method_uuid order by quantity desc;
    </select>

    <select id="getMostDevelopersInvolvedClass" parameterType="String" resultMap="mostDevelopersInfo">
        select r.class_uuid as uuid,r.fullname as name,m.file_path,count(distinct(r.committer)) as quantity from raw_class as r,meta_class as m  where r.class_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} group by r.class_uuid  order by quantity desc;
    </select>

    <select id="getMostDevelopersInvolvedFile" parameterType="String" resultMap="mostDevelopersInfo">
        select r.file_uuid as uuid ,r.file_name as name,m.file_path,count(distinct(r.committer)) as quantity from raw_file as r,meta_file as m  where r.file_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} group by r.file_uuid  order by quantity desc;
    </select>

    <select id="getMostDevelopersInvolvedPackage" parameterType="String" resultMap="mostDevelopersInfo">
        select r.root_uuid as uuid ,m.package_name as name,count(distinct(r.committer)) as quantity from raw_package as r,meta_package as m  where r.root_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} group by r.root_uuid  order by quantity desc;
    </select>

    <!-- -->
    <resultMap id="modificationByTime" type="cn.edu.fudan.codetracker.domain.resultmap.MostDevelopersInfo">
        <id property="uuid" column="uuid"/>
        <result property="name" column="name"/>
        <result property="filePath" column="file_path"/>
        <result property="quantity" column="quantity"/>
    </resultMap>

    <select id="getMostModifiedPackageByTime" parameterType="String" resultMap="modificationByTime">
        select r.root_uuid as uuid ,m.package_name as name ,count(*) as quantity from raw_package as r,meta_package as m  where r.root_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.root_uuid order by quantity desc;
    </select>

    <select id="getMostModifiedFileByTime" parameterType="String" resultMap="modificationByTime">
        select r.file_uuid as uuid ,r.file_name as name ,m.file_path ,count(*) as quantity from raw_file as r,meta_file as m  where r.file_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.file_uuid order by quantity desc;
    </select>

    <select id="getMostModifiedClassByTime" parameterType="String" resultMap="modificationByTime">
        select r.class_uuid as uuid ,r.class_name as name ,m.file_path ,count(*) as quantity from raw_class as r,meta_class as m  where r.class_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.class_uuid order by quantity desc;
    </select>

    <select id="getMostModifiedMethodByTime" parameterType="String" resultMap="modificationByTime">
        select r.method_uuid as uuid ,r.fullname as name ,m.file_path ,count(*) as quantity from raw_method as r,meta_method as m  where r.method_uuid=m.uuid and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.method_uuid order by quantity desc;
    </select>

    <!-- -->
    <resultMap id="mostModifiedMethodByPackage" type="cn.edu.fudan.codetracker.domain.resultmap.MostModifiedMethod">
        <id property="uuid" column="uuid"/>
        <result property="methodName" column="fullname"/>
        <result property="className" column="class_name"/>
        <result property="filePath" column="file_path"/>
        <result property="version" column="version"/>
    </resultMap>

    <select id="getMostModifiedMethodByPackage" parameterType="String" resultMap="mostModifiedMethodByPackage">
        select uuid ,fullname ,class_name ,file_path ,version from meta_method where repo_uuid = #{repoUuid} and package_uuid = #{packageUuid} and branch = #{branch} order by version desc limit 20;
    </select>

    <!-- -->
    <resultMap id="developerFocusMost" type="cn.edu.fudan.codetracker.domain.resultmap.DeveloperMostFocus">
        <id property="uuid" column="uuid"/>
        <result property="repo" column="repo_uuid"/>
        <result property="branch" column="branch"/>
        <result property="name" column="name"/>
        <result property="filePath" column="file_path"/>
        <result property="quantity" column="quantity"/>
    </resultMap>

    <select id="packageDeveloperFocusMost" parameterType="String" resultMap="developerFocusMost">
        select r.root_uuid as uuid, r.repo_uuid, r.branch, m.package_name as name , count(*) as quantity from raw_package as r,meta_package as m where r.root_uuid = m.uuid and r.committer = #{committer} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.root_uuid order by quantity desc limit 20;
    </select>

    <select id="fileDeveloperFocusMost" parameterType="String" resultMap="developerFocusMost">
        select r.file_uuid as uuid, r.repo_uuid, r.branch, r.file_name as name , m.file_path,count(*) as quantity from raw_file as r,meta_file as m where r.file_uuid = m.uuid and r.committer = #{committer} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.file_uuid order by quantity desc limit 20;
    </select>

    <select id="classDeveloperFocusMost" parameterType="String" resultMap="developerFocusMost">
        select r.class_uuid as uuid, r.repo_uuid, r.branch, r.class_name as name , m.file_path,count(*) as quantity from raw_class as r,meta_class as m where r.class_uuid = m.uuid and r.committer = #{committer} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.class_uuid order by quantity desc limit 20;
    </select>

    <select id="methodDeveloperFocusMost" parameterType="String" resultMap="developerFocusMost">
        select r.method_uuid as uuid, r.repo_uuid, r.branch, r.fullname as name , m.file_path,count(*) as quantity from raw_method as r,meta_method as m where r.method_uuid = m.uuid and r.committer = #{committer} and r.commit_date &gt; #{beginDate} and r.commit_date &lt; #{endDate} group by r.method_uuid order by quantity desc limit 20;
    </select>

    <!-- -->
    <resultMap id="CommitMessageInfo" type="String">
        <id property="commitMessage" column="commit_message"/>
    </resultMap>

    <select id="getCommitMessageByPackageId" parameterType="String" resultMap="CommitMessageInfo">
        select commit_message from raw_package where root_uuid = #{uuid} and committer = #{committer} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate};
    </select>

    <select id="getCommitMessageByFileId" parameterType="String" resultMap="CommitMessageInfo">
        select commit_message from raw_file where file_uuid = #{uuid} and committer = #{committer} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate};
    </select>

    <select id="getCommitMessageByClassId" parameterType="String" resultMap="CommitMessageInfo">
        select commit_message from raw_method where class_uuid = #{uuid} and committer = #{committer} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate};
    </select>

    <select id="getCommitMessageByMethodId" parameterType="String" resultMap="CommitMessageInfo">
        select commit_message from raw_method where method_uuid = #{uuid} and committer = #{committer} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate};
    </select>

    <!-- -->
    <resultMap id="ContentInfo" type="String">
        <id property="content" column="content"/>
    </resultMap>

    <select id="getContentByMethodId" parameterType="String" resultMap="ContentInfo">
        select content from raw_method where method_uuid = #{uuid} and committer = #{committer} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate};
    </select>


    <!-- -->
    <resultMap id="commitTimeLine" type="cn.edu.fudan.codetracker.domain.resultmap.CommitTimeLine">
        <id property="commitId" column="commitid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitMessage" column="commit_message"/>
    </resultMap>

    <select id="packageCommitTimeLine" parameterType="String" resultMap="commitTimeLine">
        select commitid,committer,commit_date,change_relation,commit_message from raw_package where root_uuid = #{uuid} order by commit_date;
    </select>

    <select id="fileCommitTimeLine" parameterType="String" resultMap="commitTimeLine">
        select commitid,committer,commit_date,change_relation,commit_message from raw_file where file_uuid = #{uuid} order by commit_date;
    </select>

    <select id="classCommitTimeLine" parameterType="String" resultMap="commitTimeLine">
        select commitid,committer,commit_date,change_relation,commit_message from raw_class where class_uuid = #{uuid} order by commit_date;
    </select>

    <select id="methodCommitTimeLine" parameterType="String" resultMap="commitTimeLine">
        select commitid,committer,commit_date,change_relation,commit_message from raw_method where method_uuid = #{uuid} order by commit_date;
    </select>

    <!-- -->
    <resultMap id="commitInfoByCommitter" type="cn.edu.fudan.codetracker.domain.resultmap.CommitInfoByCommitter">
        <id property="commitId" column="commitid"/>
        <result property="commitDate" column="commit_date"/>
        <result property="commitMessage" column="commit_message"/>
    </resultMap>

    <select id="getCommitInfoByCommitter" parameterType="String" resultMap="commitInfoByCommitter">
        select distinct commitid,commit_date,commit_message from raw_method where committer = #{committer} order by commit_date;
    </select>

    <!-- -->
    <resultMap id="BasicInfoByCommitId" type="cn.edu.fudan.codetracker.domain.resultmap.BasicInfoByCommitId">
        <id property="name" column="name"/>
        <result property="filePath" column="file_path"/>
    </resultMap>

    <select id="getFileInfoByCommitId" parameterType="String" resultMap="BasicInfoByCommitId">
        select r.file_name as name,m.file_path from raw_file as r, meta_file as m where r.file_uuid = m.uuid and r.commitid = #{commitId};
    </select>

    <select id="getMethodInfoByCommitId" parameterType="String" resultMap="BasicInfoByCommitId">
        select r.fullname as name,m.file_path from raw_method as r, meta_method as m where r.method_uuid = m.uuid and r.commitid = #{commitId};
    </select>

    <!-- -->
    <resultMap id="DeleteStatementList" type="cn.edu.fudan.codetracker.domain.resultmap.DeleteStatementInfo">
        <id property="statementUuid" column="statement_uuid"/>
        <result property="deleteCommitter" column="committer"/>
        <result property="deleteDate" column="commit_date"/>
    </resultMap>

    <select id="getDeleteStatementUuidList" parameterType="String" resultMap="DeleteStatementList">
        select statement_uuid,committer,commit_date from raw_statement where committer = #{committer} and repo_uuid = #{repoUuid} and branch = #{branch} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate} and change_relation = "DELETE";
    </select>

    <!-- -->
    <resultMap id="DeleteStatementFormerInfo" type="cn.edu.fudan.codetracker.domain.resultmap.DeleteStatementInfo">
        <id property="statementUuid" column="statement_uuid"/>
        <result property="lastCommitter" column="committer"/>
        <result property="lastCommitDate" column="commit_date"/>
        <result property="body" column="body"/>
    </resultMap>

    <select id="getDeleteStatementLastInfo" parameterType="String" resultMap="DeleteStatementFormerInfo">
        select statement_uuid, committer, commit_date, body from raw_statement where change_relation != "DELETE" and statement_uuid = #{statementUuid} order by commit_date desc limit 1;
    </select>

    <!-- -->
    <resultMap id="DeleteStatementFirstInfo" type="cn.edu.fudan.codetracker.domain.resultmap.DeleteStatementInfo">
        <id property="statementUuid" column="statement_uuid"/>
        <result property="firstCommitter" column="committer"/>
        <result property="firstCommitDate" column="commit_date"/>
    </resultMap>

    <select id="getDeleteStatementFirstInfo" parameterType="String" resultMap="DeleteStatementFirstInfo">
        select statement_uuid, committer, commit_date from raw_statement where change_relation != "DELETE" and statement_uuid = #{statementUuid} order by commit_date asc limit 1;
    </select>

    <!-- -->
    <resultMap id="StatementInfoByMethod" type="cn.edu.fudan.codetracker.domain.resultmap.StatementInfoByMethod">
        <id property="statementUuid" column="statement_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="commitMessage" column="commit_message"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="body" column="body"/>
        <result property="begin" column="statement_begin"/>
        <result property="end" column="statement_end"/>
    </resultMap>

    <select id="getStatementInfoByMethod" parameterType="String" resultMap="StatementInfoByMethod">
        select statement_uuid, committer, commit_date, commit_message, change_relation, body, statement_begin, statement_end from raw_statement where method_uuid = #{methodUuid} and committer = #{committer} and commit_date &gt; #{beginDate} and commit_date &lt; #{endDate} order by commit_date, statement_begin, statement_end desc;
    </select>

    <!-- -->
    <resultMap id="ChangeCommitter" type="String">
        <id property="committer" column="committer"/>
    </resultMap>

    <select id="getChangeCommitterByClass" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_class as r, meta_class as m where r.class_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and r.class_name = #{className} and r.commit_date &lt;= #{commitDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <select id="getChangeCommitterByMethod" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_method as r, meta_method as m where r.method_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and m.class_name = #{className} and r.signature = #{signature} and r.commit_date &lt;= #{commitDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <select id="getChangeCommitterByField" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_field as r, meta_field as m where r.field_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and m.class_name = #{className} and r.simple_name = #{simpleName} and r.commit_date &lt;= #{commitDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <select id="getChangeCommitterByStatement" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_statement where statement_uuid in (select distinct statement_uuid from raw_statement where method_uuid = #{methodUuid} and body = #{body}) and commit_date &lt;= #{commitDate} and (change_relation = "SELF_CHANGE" or change_relation = "ADD") order by commit_date desc limit 1;
    </select>

    <!--起始时间是参数，结束时间为版本时间-->
    <select id="getChangeCommitterByClassDate" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_class as r, meta_class as m where r.class_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and r.class_name = #{className} and r.commit_date &lt;= #{commitDate} and r.commit_date &gt;= #{beginDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <select id="getChangeCommitterByMethodDate" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_method as r, meta_method as m where r.method_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and m.class_name = #{className} and r.signature = #{signature} and r.commit_date &lt;= #{commitDate} and r.commit_date &gt;= #{beginDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <select id="getChangeCommitterByFieldDate" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_field as r, meta_field as m where r.field_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and m.class_name = #{className} and r.simple_name = #{simpleName} and r.commit_date &lt;= #{commitDate} and r.commit_date &gt;= #{beginDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <select id="getChangeCommitterByStatementDate" parameterType="String" resultMap="ChangeCommitter">
        select committer from raw_statement where statement_uuid in (select distinct statement_uuid from raw_statement where method_uuid = #{methodUuid} and body = #{body}) and commit_date &lt;= #{commitDate} and commit_date &gt;= #{beginDate} and (change_relation = "SELF_CHANGE" or change_relation = "ADD") order by commit_date desc limit 1;
    </select>

    <!-- -->
    <resultMap id="MetaMethodUuid" type="String">
        <id property="methodUuid" column="method_uuid"/>
    </resultMap>

    <select id="getMetaMethodUuidByMethod" parameterType="String" resultMap="MetaMethodUuid">
        select method_uuid from raw_method as r, meta_method as m where r.method_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and m.class_name = #{className} and r.signature = #{signature} and r.commit_date &lt;= #{commitDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <!--时间段筛选-->
    <select id="getMetaMethodUuidByMethodDate" parameterType="String" resultMap="MetaMethodUuid">
        select method_uuid from raw_method as r, meta_method as m where r.method_uuid = m.uuid and m.file_path = #{filePath} and r.repo_uuid = #{repoUuid} and r.branch = #{branch} and m.class_name = #{className} and r.signature = #{signature} and r.commit_date &lt;= #{commitDate} and r.commit_date &gt;= #{beginDate} and (r.change_relation = "SELF_CHANGE" or r.change_relation = "ADD") order by r.commit_date desc limit 1;
    </select>

    <!-- -->
    <resultMap id="CommitterLineInfo" type="cn.edu.fudan.codetracker.domain.resultmap.CommitterLineInfo">
        <id property="commitId" column="commitid"/>
        <result property="committer" column="committer"/>
        <result property="addCount" column="add_count"/>
        <result property="deleteCount" column="delete_count"/>
    </resultMap>

    <select id="getCommitterLineInfo" parameterType="String" resultMap="CommitterLineInfo">
        select commitid, committer, add_count, delete_count from line_count where repo_uuid = #{repoUuid} and branch = #{branch} and commit_date &lt;= #{commitDate};
    </select>


</mapper>