<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.codetracker.mapper.StatisticsMapper">

    <!--valid line 相关-->
    <resultMap id="ValidLineInfoClass" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="repoUuid" column="repo_uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_class_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByClass" parameterType="String" resultMap="ValidLineInfoClass">
        select uuid,repo_uuid,committer,meta_class_uuid,change_relation,commit_date from raw_class where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and commit_date != (select commit_date from raw_class where repo_uuid = #{repoUuid} order by commit_date limit 1)
        </if>
        <if test="developer != null and developer != ''">
            and committer= #{developer}
        </if>
        and change_relation in ("ADD","DELETE","SELF_CHANGE") order by meta_class_uuid,commit_date desc;
    </select>

    <resultMap id="ValidLineInfoMethod" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="repoUuid" column="repo_uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_method_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByMethod" parameterType="String" resultMap="ValidLineInfoMethod">
        select uuid,repo_uuid,committer,meta_method_uuid,change_relation,commit_date from raw_method where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and commit_date != (select commit_date from raw_method where repo_uuid = #{repoUuid} order by commit_date limit 1)
        </if>
        <if test="developer != null and developer != ''">
            and committer= #{developer}
        </if>
        and change_relation in ("ADD","DELETE","SELF_CHANGE") order by meta_method_uuid,commit_date desc;
    </select>

    <resultMap id="ValidLineInfoField" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="repoUuid" column="repo_uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_field_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByField" parameterType="String" resultMap="ValidLineInfoField">
        select uuid,repo_uuid,committer,meta_field_uuid,change_relation,commit_date from raw_field where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and commit_date != (select commit_date from raw_field where repo_uuid = #{repoUuid} order by commit_date limit 1)
        </if>
        <if test="developer != null and developer != ''">
            and committer= #{developer}
        </if>
        and change_relation in ("ADD","DELETE","SELF_CHANGE") order by meta_field_uuid,commit_date desc;
    </select>

    <resultMap id="ValidLineInfoStatement" type="cn.edu.fudan.codetracker.domain.resultmap.ValidLineInfo">
        <id property="uuid" column="uuid"/>
        <result property="repoUuid" column="repo_uuid"/>
        <result property="committer" column="committer"/>
        <result property="metaUuid" column="meta_statement_uuid"/>
        <result property="changeRelation" column="change_relation"/>
        <result property="commitDate" column="commit_date"/>
    </resultMap>

    <select id="getValidLineInfoByStatement" parameterType="String" resultMap="ValidLineInfoStatement">
        select uuid,repo_uuid,committer,meta_statement_uuid,change_relation,commit_date from raw_statement where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} order by commit_date limit 1)
        </if>
        <if test="developer != null and developer != ''">
            and committer= #{developer}
        </if>
        and isLogic = 1 and change_relation in ("ADD","DELETE","SELF_CHANGE") order by meta_statement_uuid,commit_date desc;
    </select>

    <!--获取时间段内代码存活情况-->
    <resultMap id="SurviveStatement" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_statement_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveStatement" parameterType="String" resultMap="SurviveStatement">
        select meta_statement_uuid, committer, commit_date, change_relation from raw_statement where meta_statement_uuid in (
        select meta_statement_uuid from raw_statement where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
           and repo_uuid = #{repoUuid} and branch = #{branch}
        </if>)
        and change_relation in ("ADD","SELF_CHANGE","DELETE","MOVE") and isLogic = 1 order by meta_statement_uuid, commit_date;
    </select>

    <resultMap id="SurviveMethod" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_method_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveMethod" parameterType="String" resultMap="SurviveMethod">
        select meta_method_uuid, committer, commit_date, change_relation from raw_method where meta_method_uuid in (select meta_method_uuid from raw_method where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and branch = #{branch}
        </if>
        )
        and change_relation in ("ADD","SELF_CHANGE","DELETE","MOVE") order by meta_method_uuid, commit_date;
    </select>

    <resultMap id="SurviveField" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_field_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveField" parameterType="String" resultMap="SurviveField">
        select meta_field_uuid, committer, commit_date, change_relation from raw_field where meta_field_uuid in (select meta_field_uuid from raw_field where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and branch = #{branch}
        </if>
        )
        and change_relation in ("ADD","SELF_CHANGE","DELETE","MOVE") order by meta_field_uuid, commit_date;
    </select>

    <resultMap id="SurviveClass" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_class_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getSurviveClass" parameterType="String" resultMap="SurviveClass">
        select meta_class_uuid, committer, commit_date, change_relation from raw_class where meta_class_uuid in (select meta_class_uuid from raw_class where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
        <if test="repoUuid != null and repoUuid != ''">
            and repo_uuid = #{repoUuid} and branch = #{branch}
        </if>
        ) and change_relation != "CHANGE" order by meta_class_uuid, commit_date;
    </select>


    <!--删除操作-->
    <delete id="deleteFromMetaPackage" parameterType="String">
        delete from meta_package where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaFile" parameterType="String">
        delete from meta_file where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaClass" parameterType="String">
        delete from meta_class where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaMethod" parameterType="String">
        delete from meta_method where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaField" parameterType="String">
        delete from meta_field where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMetaStatement" parameterType="String">
        delete from meta_statement where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawPackage" parameterType="String">
        delete from raw_package where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawFile" parameterType="String">
        delete from raw_file where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawClass" parameterType="String">
        delete from raw_class where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawMethod" parameterType="String">
        delete from raw_method where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawField" parameterType="String">
        delete from raw_field where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRawStatement" parameterType="String">
        delete from raw_statement where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromRelationStatement" parameterType="String">
        delete from relation_statement where repo_uuid=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromTrackerRepo" parameterType="String">
        delete from tracker_repo where repo_id=#{repoUuid} and branch=#{branch};
    </delete>

    <delete id="deleteFromMethodCall" parameterType="String">
        delete from method_call where repo_uuid=#{repoUuid};
    </delete>


    <!--获取删除代码信息-->
    <resultMap id="DeleteStatements" type="cn.edu.fudan.codetracker.domain.resultmap.SurviveStatementInfo">
        <id property="statementUuid" column="meta_statement_uuid"/>
        <result property="repoUuid" column="repo_uuid"/>
        <result property="committer" column="committer"/>
        <result property="commitDate" column="commit_date"/>
        <result property="changeRelation" column="change_relation"/>
    </resultMap>

    <select id="getDeleteInfo" parameterType="String" resultMap="DeleteStatements" >
        select meta_statement_uuid,repo_uuid,committer,commit_date,change_relation from raw_statement where
        meta_statement_uuid in (select meta_statement_uuid from raw_statement where
        <if test="repoUuid != null and repoUuid != ''">
            repo_uuid = #{repoUuid} and
        </if>
        commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and change_relation = "DELETE")
        and change_relation in ("ADD","DELETE") order by meta_statement_uuid,commit_date desc;
    </select>

    <!--获取修改信息-->
    <select id="getChangeInfo" parameterType="String" resultMap="DeleteStatements" >
        select meta_statement_uuid,repo_uuid, committer,commit_date,change_relation from raw_statement where
        meta_statement_uuid in (select meta_statement_uuid from raw_statement where
        <if test="repoUuid != null and repoUuid != ''">
            repo_uuid = #{repoUuid} and
        </if>
        commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate} and change_relation = "SELF_CHANGE")
        and change_relation in ("ADD","DELETE","SELF_CHANGE") order by meta_statement_uuid,commit_date desc;
    </select>

    <resultMap id="FocusFiles" type="cn.edu.fudan.codetracker.domain.resultmap.TempMostInfo">
        <id property="uuid" column="uuid"/>
        <result property="name" column="file_name"/>
        <result property="committer" column="committer"/>
    </resultMap>

    <select id="getFocusFileNum" parameterType="String" resultMap="FocusFiles">
        select uuid, file_name, committer from raw_file where
        <if test="repoUuid != null and repoUuid != ''">
            repo_uuid = #{repoUuid} and commit_date != (select commit_date from raw_statement where repo_uuid = #{repoUuid} order by commit_date limit 1) and
        </if>
        commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate};
    </select>

    <!--获取所有相关代码库信息-->
    <select id="getDistinctRepoUuid" parameterType="String" resultType="java.lang.String">
        select distinct repo_uuid from raw_file where commit_date &gt;= #{beginDate} and commit_date &lt;= #{endDate}
            <if test="developer != null and developer != ''">
                and committer = #{developer}
            </if>;
    </select>

    <!--获取语句的首个提交者-->
    <select id="getStatementFirstCommitter" parameterType="String" resultType="java.util.Map">
        select distinct meta_statement_uuid, committer from raw_statement where change_relation="ADD";
    </select>

    <select id="getMethodFirstCommitter" parameterType="String" resultType="java.util.Map">
        select distinct meta_method_uuid, committer from raw_method where change_relation="ADD";
    </select>

    <select id="getFieldFirstCommitter" parameterType="String" resultType="java.util.Map">
        select distinct meta_field_uuid, committer from raw_field where change_relation="ADD";
    </select>

    <select id="getClassFirstCommitter" parameterType="String" resultType="java.util.Map">
        select distinct meta_class_uuid, committer from raw_class where change_relation="ADD";
    </select>

</mapper>