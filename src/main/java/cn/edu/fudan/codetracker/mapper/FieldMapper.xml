<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.codetracker.mapper.FieldMapper">

    <resultMap id="trackerInfo" type="cn.edu.fudan.codetracker.domain.projectinfo.TrackerInfo">
        <id property="version" column="version"/>
        <id property="rootUUID" column="uuid"/>
    </resultMap>

    <insert id="insertFieldInfoList" parameterType="List">
        insert into meta_field
        (
        uuid,
        simple_name,
        modifier,
        simple_type,
        init_value,
        class_uuid,
        class_name,
        file_name,
        file_path,
        package_name,
        module_name,
        package_uuid,
        start_commit,
        start_commit_date,
        end_commit,
        end_commit_date,
        repo_uuid,
        branch,
        version
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.simpleName},
            #{item.modifier},
            #{item.simpleType},
            #{item.initValue},
            #{item.parent.uuid},
            #{item.parent.className},
            #{item.parent.fileName},
            #{item.parent.filePath},
            #{item.parent.packageName},
            #{item.parent.moduleName},
            #{item.parent.packageUuid},
            #{item.startCommit},
            #{item.startCommitDate},
            #{item.endCommit},
            #{item.endCommitDate},
            #{item.repoUuid},
            #{item.branch},
            #{item.trackerInfo.version}
            )
        </foreach>
    </insert>

    <insert id="insertRawFieldInfoList" parameterType="List">
        insert into raw_field
        (
        uuid,
        simple_name,
        simple_type,
        modifier,
        init_value,
        class_uuid,
        field_uuid,
        version,
        change_relation,
        commitid,
        committer,
        commit_date,
        commit_message,
        parent_commit,
        full_name,
        repo_uuid,
        branch
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.simpleName},
            #{item.modifier},
            #{item.simpleType},
            #{item.initValue},
            #{item.parent.uuid},
            #{item.trackerInfo.rootUUID},
            #{item.trackerInfo.version},
            #{item.trackerInfo.changeRelation},
            #{item.commit},
            #{item.committer},
            #{item.commitDate},
            #{item.commitMessage},
            #{item.parentCommit},
            #{item.fullName},
            #{item.repoUuid},
            #{item.branch}
            )
        </foreach>
    </insert>

    <select id="getTrackerInfo" resultMap="trackerInfo" parameterType="String">
        select version,uuid from meta_field where file_path = #{filePath} and class_name = #{className} and simple_name = #{simpleName} and repo_uuid = #{repoUuid} and branch = #{branch} order by version desc limit 1
    </select>

    <update id="updateChangeInfo" parameterType="List">
        update meta_field
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="end_commit = case" suffix="end,">
                <foreach collection="list" item="item">
                    when uuid=#{item.trackerInfo.rootUUID} then #{item.endCommit}
                </foreach>
            </trim>
            <trim prefix="end_commit_date = case" suffix="end,">
                <foreach collection="list" item="item">
                    when uuid=#{item.trackerInfo.rootUUID} then #{item.endCommitDate}
                </foreach>
            </trim>
            <trim prefix="version = case" suffix="end,">
                <foreach collection="list" item="item">
                    when uuid=#{item.trackerInfo.rootUUID} then #{item.trackerInfo.version}
                </foreach>
            </trim>
        </trim>
        where uuid in
        <foreach collection="list" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.trackerInfo.rootUUID}
        </foreach>
    </update>
</mapper>