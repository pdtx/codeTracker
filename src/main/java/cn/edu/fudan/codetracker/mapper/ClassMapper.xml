<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.codetracker.mapper.ClassMapper">

    <insert id="insertClassInfoList">
        insert into codeTracker.meta_class
        (
        uuid,
        fullname,
        class_name,
        file_path,
        meta_file_uuid,
        start_commit,
        start_commit_date,
        end_commit,
        end_commit_date,
        repo_uuid,
        branch,
        version,
        file_name
        )
        VALUES
        <foreach collection="classNodes" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.fullName},
            #{item.className},
            #{item.parent.filePath},
            #{item.parent.rootUuid},
            #{commonInfo.startCommit},
            #{commonInfo.startCommitDate},
            #{commonInfo.endCommit},
            #{commonInfo.endCommitDate},
            #{commonInfo.repoUuid},
            #{commonInfo.branch},
            #{item.version},
            #{item.parent.fileName}
            )
        </foreach>
    </insert>

    <insert id="insertRawClassInfoList">
        insert into codeTracker.raw_class
        (
        uuid,
        fullname,
        class_name,
        meta_file_uuid,
        meta_class_uuid,
        version,
        commitid,
        committer,
        commit_date,
        commit_message,
        last_change_commit,
        change_relation,
        branch,
        repo_uuid
        )
        VALUES
        <foreach collection="classNodes" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.fullName},
            #{item.className},
            #{item.parent.rootUuid},
            #{item.rootUuid},
            #{item.version},
            #{commonInfo.commit},
            #{commonInfo.committer},
            #{commonInfo.commitDate},
            #{commonInfo.commitMessage},
            #{commonInfo.parentCommit},
            #{item.changeStatus},
            #{commonInfo.branch},
            #{commonInfo.repoUuid}
            )
        </foreach>
    </insert>

    <update id="updateChangeInfo">
        update codeTracker.meta_class
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="end_commit = case" suffix="end,">
                <foreach collection="classNodes" item="item">
                    when uuid=#{item.rootUuid} then #{commonInfo.endCommit}
                </foreach>
            </trim>
            <trim prefix="end_commit_date = case" suffix="end,">
                <foreach collection="classNodes" item="item">
                    when uuid=#{item.rootUuid} then #{commonInfo.endCommitDate}
                </foreach>
            </trim>
            <trim prefix="version = case" suffix="end,">
                <foreach collection="classNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.version}
                </foreach>
            </trim>
        </trim>
        where uuid in
        <foreach collection="classNodes" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.rootUuid}
        </foreach>
    </update>



    <resultMap id="trackerInfo" type="cn.edu.fudan.codetracker.domain.projectinfo.TrackerInfo">
        <id property="version" column="version"/>
        <id property="rootUUID" column="uuid"/>
    </resultMap>

    <select id="getTrackerInfo" resultMap="trackerInfo" parameterType="String">
        select version,uuid from codeTracker.meta_class where file_path = #{filePath} and class_name = #{className} and repo_uuid = #{repoUuid} and branch = #{branch} order by version desc limit 1
    </select>

</mapper>