<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.codetracker.mapper.StatementMapper">

    <insert id="insertStatementInfoList">
        insert into codeTracker.meta_statement
        (
        uuid,
        meta_method_uuid,
        start_commit,
        start_commit_date,
        end_commit,
        end_commit_date,
        repo_uuid,
        branch,
        body,
        version,
        statement_begin,
        statement_end,
        statement_type
        )
        VALUES
        <foreach collection="statementNodes" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.methodUuid},
            #{commonInfo.startCommit},
            #{commonInfo.startCommitDate},
            #{commonInfo.endCommit},
            #{commonInfo.endCommitDate},
            #{commonInfo.repoUuid},
            #{commonInfo.branch},
            #{item.body},
            #{item.version},
            #{item.begin},
            #{item.end},
            #{item.type}
            )
        </foreach>
    </insert>

    <insert id="insertRawStatementInfoList">
        insert into codeTracker.raw_statement
        (
        uuid,
        meta_statement_uuid,
        meta_method_uuid,
        commitid,
        committer,
        commit_date,
        commit_message,
        last_change_commit,
        change_relation,
        statement_begin,
        statement_end,
        repo_uuid,
        branch,
        body,
        version,
        isLogic
        )
        VALUES
        <foreach collection="statementNodes" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.rootUuid},
            #{item.methodUuid},
            #{commonInfo.commit},
            #{commonInfo.committer},
            #{commonInfo.commitDate},
            #{commonInfo.commitMessage},
            #{commonInfo.parentCommit},
            #{item.changeStatus},
            #{item.begin},
            #{item.end},
            #{commonInfo.repoUuid},
            #{commonInfo.branch},
            #{item.body},
            #{item.version},
            #{item.isLogic}
            )
        </foreach>
    </insert>

    <insert id="insertStatementRelationList" parameterType="List">
        insert into codeTracker.relation_statement
        (
        uuid,
        ancestor_uuid,
        descendant_uuid,
        distance,
        valid_begin,
        repo_uuid,
        branch
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.ancestorUuid},
            #{item.descendantUuid},
            #{item.distance},
            #{item.validBegin},
            #{item.repoUuid},
            #{item.branch}
            )
        </foreach>
    </insert>

    <update id="updateChangeInfo">
        update codeTracker.meta_statement
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="end_commit = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when uuid=#{item.rootUuid} then #{commonInfo.endCommit}
                </foreach>
            </trim>
            <trim prefix="end_commit_date = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when uuid=#{item.rootUuid} then #{commonInfo.endCommitDate}
                </foreach>
            </trim>
            <trim prefix="body = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.body}
                </foreach>
            </trim>
            <trim prefix="version = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.version}
                </foreach>
            </trim>
            <trim prefix="statement_begin = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.begin}
                </foreach>
            </trim>
            <trim prefix="statement_end = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when uuid=#{item.rootUuid} then #{item.end}
                </foreach>
            </trim>
        </trim>
        where uuid in
        <foreach collection="statementNodes" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.rootUuid}
        </foreach>
    </update>

    <update id="updateDeleteInfo">
        update codeTracker.relation_statement
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="valid_end = case" suffix="end,">
                <foreach collection="statementNodes" item="item">
                    when descendant_uuid=#{item.rootUuid} then #{commonInfo.commitDate}
                </foreach>
            </trim>
        </trim>
        where descendant_uuid in
        <foreach collection="statementNodes" index="index" item="item"
                 separator="," open="(" close=")">
            #{item.rootUuid}
        </foreach>
    </update>




    <resultMap id="trackerInfo" type="cn.edu.fudan.codetracker.domain.projectinfo.TrackerInfo">
        <id property="version" column="version"/>
        <id property="rootUUID" column="statement_uuid"/>
    </resultMap>

    <select id="getTrackerInfo" resultMap="trackerInfo" parameterType="String">
        select version,statement_uuid from codeTracker.raw_statement where meta_method_uuid = #{methodUuid} and body = #{body} and change_relation != "DELETE" order by commit_date desc limit 1;
    </select>

    <select id="getTrackerInfoWithBodyUsingSplice" resultMap="trackerInfo" parameterType="String">
        select version,statement_uuid from codeTracker.raw_statement where meta_method_uuid = #{methodUuid} and body = ${body} order by version desc limit 1;
    </select>
</mapper>